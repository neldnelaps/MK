Program -> funk_type funk_name ( ) New_space
funk_type -> void
funk_name -> main
New_space -> { List_oper }
List_oper -> Oper $ Oper List_oper
Oper -> Assing_oper $ While_oper $ If_oper
Assing_oper -> _id ; $ _id , Assing_oper $ _id = Term ;
While_oper -> while ( Bool_oper ) Oper $ while ( Bool_oper ) New_space
If_oper -> if ( Bool_oper ) Oper $ if ( Bool_oper ) New_space $ if ( Bool_oper ) Oper else Oper $ if ( Bool_oper ) Oper else New_space $ if ( Bool_oper ) New_space else Oper $ if ( Bool_oper ) New_space else New_space
Term -> IoC $ ( Term ) $ Term Sign Term
Bool_oper -> Term $ ( Bool_oper ) $ Bool_oper Logical Bool_oper
Logical -> > $ < $ == $ <= $ >= $ != $ && $ ||
IoC -> _id $ _const
Sign -> + $ - $ * $ /